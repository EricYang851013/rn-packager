__d(/* test/index.js */function(global, require, module, exports) {var _jsxFileName = '/Users/Denis/Development/rn-packager/tests/index.js';

var _react = require('react/react.js');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native/Libraries/react-native/react-native.js');

var _reactNativeImagePicker = require('test@react-native-image-picker/index.js');

var _reactNativeImagePicker2 = babelHelpers.interopRequireDefault(_reactNativeImagePicker);

var _widget = require('test/widget.js');

var _widget2 = babelHelpers.interopRequireDefault(_widget);

var HelloWorldApp = function (_Component) {
  babelHelpers.inherits(HelloWorldApp, _Component);

  function HelloWorldApp() {
    babelHelpers.classCallCheck(this, HelloWorldApp);
    return babelHelpers.possibleConstructorReturn(this, (HelloWorldApp.__proto__ || Object.getPrototypeOf(HelloWorldApp)).apply(this, arguments));
  }

  babelHelpers.createClass(HelloWorldApp, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _reactNative.Text,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 9
          }
        },
        'Hello world!'
      );
    }
  }]);
  return HelloWorldApp;
}(_react.Component);

_reactNative.AppRegistry.registerComponent('HelloWorldApp', function () {
  return HelloWorldApp;
});
}, "test/index.js", null, "test/index.js");
__d(/* test@react-native-image-picker/index.js */function(global, require, module, exports) {'use strict';

var _require = require('react-native/Libraries/react-native/react-native.js'),
    NativeModules = _require.NativeModules;

var ImagePickerManager = NativeModules.ImagePickerManager;


var DEFAULT_OPTIONS = {
  title: 'Select a Photo',
  cancelButtonTitle: 'Cancel',
  takePhotoButtonTitle: 'Take Photo…',
  chooseFromLibraryButtonTitle: 'Choose from Library…',
  quality: 1.0,
  allowsEditing: false,
  permissionDenied: {
    title: 'Permission denied',
    text: 'To be able to take pictures with your camera and choose images from your library.',
    reTryTitle: 're-try',
    okTitle: 'I\'m sure'
  }
};

module.exports = babelHelpers.extends({}, ImagePickerManager, {
  showImagePicker: function showImagePicker(options, callback) {
    if (typeof options === 'function') {
      callback = options;
      options = {};
    }
    return ImagePickerManager.showImagePicker(babelHelpers.extends({}, DEFAULT_OPTIONS, options), callback);
  }
});
}, "test@react-native-image-picker/index.js", null, "test@react-native-image-picker/index.js");
__d(/* test/widget.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/Denis/Development/rn-packager/tests/widget.js';

var _react = require('react/react.js');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native/Libraries/react-native/react-native.js');

var Widget = function (_Component) {
  babelHelpers.inherits(Widget, _Component);

  function Widget() {
    babelHelpers.classCallCheck(this, Widget);
    return babelHelpers.possibleConstructorReturn(this, (Widget.__proto__ || Object.getPrototypeOf(Widget)).apply(this, arguments));
  }

  babelHelpers.createClass(Widget, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _reactNative.Text,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 7
          }
        },
        'Widget!'
      );
    }
  }]);
  return Widget;
}(_react.Component);

exports.default = Widget;
}, "test/widget.js", null, "test/widget.js");
;require('test/index.js');